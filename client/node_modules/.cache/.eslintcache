[{"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\index.js":"1","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\App.js":"2","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\pages\\Profile.js":"3","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\pages\\Dashboard.js":"4","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\config\\useLimitedArray.js":"5","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\pages\\DataSensor.js":"6","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\Sidebar.js":"7","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\pages\\ActionHistory.js":"8","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\Cards.js":"9","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\Clock.js":"10","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\DataChart.js":"11","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\Led.js":"12"},{"size":307,"mtime":1693746382000,"results":"13","hashOfConfig":"14"},{"size":4742,"mtime":1727013044584,"results":"15","hashOfConfig":"14"},{"size":4173,"mtime":1727232940152,"results":"16","hashOfConfig":"14"},{"size":4365,"mtime":1727232597684,"results":"17","hashOfConfig":"14"},{"size":721,"mtime":1727013002736,"results":"18","hashOfConfig":"14"},{"size":12150,"mtime":1727227042245,"results":"19","hashOfConfig":"14"},{"size":8042,"mtime":1724676370882,"results":"20","hashOfConfig":"14"},{"size":9248,"mtime":1726796925245,"results":"21","hashOfConfig":"14"},{"size":4787,"mtime":1727212632435,"results":"22","hashOfConfig":"14"},{"size":528,"mtime":1693050424000,"results":"23","hashOfConfig":"14"},{"size":3508,"mtime":1727212640207,"results":"24","hashOfConfig":"14"},{"size":7091,"mtime":1727203813297,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"xj0vvo",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"29"},"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\index.js",[],[],[],"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\App.js",[],[],"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\pages\\Profile.js",[],[],"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\pages\\Dashboard.js",["67","68","69"],[],"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\config\\useLimitedArray.js",[],[],"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\pages\\DataSensor.js",["70","71","72","73","74"],[],"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\Sidebar.js",[],[],"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\pages\\ActionHistory.js",["75","76","77","78"],[],"import React, { useEffect, useState } from 'react';\r\nimport Clock from '../components/Clock';\r\n\r\nconst ActionHistory = ({ relay, setRelay, currentPage1, setCurrentPage1 }) => {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [pageSize, setPageSize] = useState(15);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8688/api/relay')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setRelay(data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    console.log(relay);\r\n\r\n    const formatISO8601ToDateTime = (isoString) => {\r\n        const date = new Date(isoString);\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Thêm 0 đầu tiên nếu tháng < 10\r\n        const day = String(date.getDate()).padStart(2, '0'); // Thêm 0 đầu tiên nếu ngày < 10\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n        const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n        return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\r\n    };\r\n\r\n    const filteredData = relay.filter(sensor => {\r\n        if (!searchQuery) return true;\r\n        const formattedDate = formatISO8601ToDateTime(sensor.date);\r\n        return formattedDate.includes(searchQuery);\r\n    });\r\n    const lastIndex = currentPage1 * pageSize;\r\n    const firstIndex = lastIndex - pageSize;\r\n    const records = filteredData.slice(firstIndex, lastIndex);\r\n    const npage = Math.ceil(filteredData.length / pageSize);\r\n    const numbers = [...Array(npage + 1).keys()].slice(1);\r\n    const handlePageSizeChange = (e) => {\r\n        setPageSize(Number(e.target.value));\r\n        setCurrentPage1(1);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <strong className=\"h-[90px] border-b mr-[100px] flex justify-start items-center\">\r\n                <h1>ACTION HISTORY</h1>\r\n                <Clock />\r\n            </strong>\r\n            <hr className=\"mr-[100px]\" />\r\n\r\n            <div className=\"mt-[20px] mr-[100px]\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <label htmlFor=\"pageSize\">Page Size:</label>\r\n                        <select\r\n                            id=\"pageSize\"\r\n                            value={pageSize}\r\n                            onChange={handlePageSizeChange}\r\n                            className=\"form-control\"\r\n                        >\r\n                            <option value={5}>5</option>\r\n                            <option value={10}>10</option>\r\n                            <option value={15}>15</option>\r\n                            <option value={20}>20</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\">\r\n                        <label htmlFor=\"searchQuery\">Search by Date:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"searchQuery\"\r\n                            value={searchQuery}\r\n                            onChange={(e) => setSearchQuery(e.target.value)}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <br></br>\r\n\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>TYPE</th>\r\n                            <th>State</th>\r\n                            <th>Time</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {records.map((sensor) => (\r\n                            <tr key={sensor.id}>\r\n                                <td>{sensor.id}</td>\r\n                                <td>{sensor.relay_id}</td>\r\n                                <td>{sensor.state}</td>\r\n                                <td>\r\n                                    {formatISO8601ToDateTime(sensor.date)}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                \r\n\r\n                <nav className=\"flex justify-end mr-[-20px]\">\r\n                    <ul className=\"pagination\">\r\n                        {numbers.map((n, i) => {\r\n                            // Tính toán số trang cần hiển thị trước và sau trang hiện tại\r\n                            const pagesToShow = 5; // Số trang liền kề (không tính trang hiện tại)\r\n                            const pagesBeforeCurrent = Math.floor(\r\n                                pagesToShow / 2,\r\n                            );\r\n                            const pagesAfterCurrent =\r\n                                pagesToShow - pagesBeforeCurrent;\r\n\r\n                            if (n === 1) {\r\n                                // Hiển thị trang đầu tiên\r\n                                return (\r\n                                    <li\r\n                                        className={`page-item ${\r\n                                            currentPage1 === n ? 'active' : ''\r\n                                        }`}\r\n                                        key={i}\r\n                                    >\r\n                                        <a\r\n                                            href=\"#\"\r\n                                            className=\"page-link\"\r\n                                            onClick={() => changeCPage(n)}\r\n                                        >\r\n                                            {n}\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n                            }\r\n\r\n                            if (n === npage) {\r\n                                // Hiển thị trang cuối cùng\r\n                                return (\r\n                                    <li\r\n                                        className={`page-item ${\r\n                                            currentPage1 === n ? 'active' : ''\r\n                                        }`}\r\n                                        key={i}\r\n                                    >\r\n                                        <a\r\n                                            href=\"#\"\r\n                                            className=\"page-link\"\r\n                                            onClick={() => changeCPage(n)}\r\n                                        >\r\n                                            {n}\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n                            }\r\n\r\n                            if (\r\n                                n >= currentPage1 - pagesBeforeCurrent &&\r\n                                n <= currentPage1 + pagesAfterCurrent &&\r\n                                n !== 1 &&\r\n                                n !== npage\r\n                            ) {\r\n                                // Hiển thị trang hiện tại và các trang liền kề\r\n                                return (\r\n                                    <li\r\n                                        className={`page-item ${\r\n                                            currentPage1 === n ? 'active' : ''\r\n                                        }`}\r\n                                        key={i}\r\n                                    >\r\n                                        <a\r\n                                            href=\"#\"\r\n                                            className=\"page-link\"\r\n                                            onClick={() => changeCPage(n)}\r\n                                        >\r\n                                            {n}\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n                            }\r\n\r\n                            if (\r\n                                (n === 2 &&\r\n                                    currentPage1 > pagesBeforeCurrent + 1) ||\r\n                                (n === npage - 1 &&\r\n                                    currentPage1 < npage - pagesAfterCurrent)\r\n                            ) {\r\n                                // Hiển thị dấu chấm ba (...) nếu cần\r\n                                return (\r\n                                    <li className=\"page-item\" key={i}>\r\n                                        <span className=\"page-link\">...</span>\r\n                                    </li>\r\n                                );\r\n                            }\r\n\r\n                            return null; // Ẩn các ô pagination khác\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n    function changeCPage(id) {\r\n        setCurrentPage1(id);\r\n    }\r\n};\r\n\r\nexport default ActionHistory;\r\n","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\Cards.js",["79","80","81","82","83"],[],"import React, { useEffect } from 'react';\r\nimport nhietDo from '../img/nhietdo.png';\r\nimport humidity from '../img/humidity.png';\r\nimport sun from '../img/sun.png';\r\nimport dobui from '../img/dobui.png';\r\n\r\nimport io from 'socket.io-client';\r\n\r\nconst Cards = ({\r\n    tempCard,\r\n    setTempCard,\r\n    humiCard,\r\n    setHumiCard,\r\n    lightCard,\r\n    setLightCard,\r\n    bgHumi,\r\n    setBgHumi,\r\n    bgTemp,\r\n    setBgTemp,\r\n    bgLight,\r\n    setBgLight,\r\n    dbCard, \r\n    setDbCard,\r\n    bgDb,\r\n    setBgDb\r\n}) => {\r\n    useEffect(() => {\r\n        const socket = io('http://localhost:8688');\r\n        socket.on('temp', (data) => {\r\n            setTempCard(data);\r\n            if (data <= 25) {\r\n                setBgTemp('blue');\r\n            } else if (data <= 35) {\r\n                setBgTemp('orange');\r\n            } else {\r\n                setBgTemp('#E33539');\r\n            }\r\n        });\r\n        socket.on('humi', (data) => {\r\n            setHumiCard(data);\r\n            if (data <= 10) {\r\n                setBgHumi('lightcyan');\r\n            } else if (data <= 65) {\r\n                setBgHumi('lightblue');\r\n            } else {\r\n                setBgHumi('mediumturquoise');\r\n            }\r\n        });\r\n        socket.on('db', (data) => {\r\n            setDbCard(data);\r\n            if (data <= 20) {\r\n                setBgDb('#FFFFFF');\r\n            } else if (data <= 60) {\r\n                setBgDb('#DDDDDD');\r\n            } else {\r\n                setBgDb('#AAAAAA');\r\n            }\r\n        });\r\n        socket.on('light', (data) => {\r\n            setLightCard(data);\r\n            if (data <= 25) {\r\n                setBgLight('#A0A0A0');\r\n            } else if (data <= 100) {\r\n                setBgLight('lightgoldenrodyellow');\r\n            } else {\r\n                setBgLight('yellow');\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            // Cleanup: Đóng kết nối socket khi component unmount\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex justify-around\">\r\n            <div\r\n                style={{ backgroundColor: bgTemp }}\r\n                className=\"flex w-[25%] h-[150px] justify-around items-center rounded-xl  bg-clip-border text-gray-700 shadow-md border\"\r\n            >\r\n                <img\r\n                    src={nhietDo}\r\n                    className={`object-contain h-[75px] mr-[-50px]`}\r\n                />\r\n                <div className=\"ml-[-50px]\">\r\n                    <p className=\"mb-4 text-base text-neutral-600\">Nhiệt độ</p>\r\n                    <h5 className=\"mb-2 text-xl font-medium leading-tight text-neutral-800 \">\r\n                        {tempCard} &deg; C\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                style={{ backgroundColor: bgHumi }}\r\n                className=\"flex w-[25%] justify-around items-center rounded-xl bg-clip-border text-gray-700 shadow-md border\"\r\n            >\r\n                <img\r\n                    src={humidity}\r\n                    className=\"object-contain h-[75px] mr-[-50px]\"\r\n                />\r\n                <div className=\"ml-[-50px]\">\r\n                    <p className=\"mb-4 text-base text-neutral-600\">Độ ẩm</p>\r\n                    <h5 className=\"mb-2 text-xl font-medium leading-tight text-neutral-800\">\r\n                        {humiCard} %\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                style={{ backgroundColor: bgLight }}\r\n                className=\"flex w-[25%] justify-around items-center rounded-xl  bg-clip-border text-gray-700 shadow-md border\"\r\n            >\r\n                <img src={sun} className=\"object-contain h-[75px] mr-[-50px]\" />\r\n                <div className=\"ml-[-50px]\">\r\n                    <p className=\"mb-4 text-base text-neutral-600\">Ánh sáng</p>\r\n                    <h5 className=\"mb-2 text-xl font-medium leading-tight text-neutral-800\">\r\n                        {lightCard} lux\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div\r\n                style={{ backgroundColor: bgDb }}\r\n                className=\"flex w-[20%] justify-around items-center rounded-xl  bg-clip-border text-gray-700 shadow-md border\"\r\n            >\r\n                <img src={dobui} className=\"object-contain h-[90px] mr-[-50px]\" />\r\n                <div className=\"ml-[-50px]\">\r\n                    <p className=\"mb-4 text-base text-neutral-600\">Độ bụi</p>\r\n                    <h5 className=\"mb-2 text-xl font-medium leading-tight text-neutral-800\">\r\n                        {dbCard} %\r\n                    </h5>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\Clock.js",[],[],"D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\DataChart.js",["84","85"],[],"import React, { useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport io from 'socket.io-client';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction DataChart({\r\n    temp,\r\n    setTemp,\r\n    humi,\r\n    setHumi,\r\n    light,\r\n    setLight,\r\n    label,\r\n    setLabel,\r\n    db,\r\n    setDb,\r\n}) {\r\n    useEffect(() => {\r\n        const socket = io('http://localhost:8688');\r\n\r\n        socket.on('temp', (data_received) => {\r\n            const nhietdo = data_received;\r\n            setTemp(nhietdo);\r\n\r\n            const currentTime = new Date().toLocaleTimeString();\r\n            setLabel(currentTime);\r\n        });\r\n\r\n        socket.on('humi', (data_received) => {\r\n            const doam = data_received;\r\n            setHumi(doam);\r\n        });\r\n\r\n        socket.on('light', (data_received) => {\r\n            const anhsang = data_received;\r\n            setLight(anhsang);\r\n        });\r\n        socket.on('db', (data_received) => {\r\n            const dobui = data_received;\r\n            setDb(dobui);\r\n        });\r\n        // Clean up the socket when the component unmounts\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    const chartData = {\r\n        labels: label,\r\n        datasets: [\r\n            {\r\n                label: 'Nhiệt độ',\r\n                data: temp,\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.2)',\r\n                yAxisID: 'y-left',\r\n                lineTension: 0.3,\r\n            },\r\n            // {\r\n            //     label: 'Độ bụi',\r\n            //     data: db,\r\n            //     borderColor: 'gray',\r\n            //     backgroundColor: 'rgba(170, 170, 170, 0.2)',\r\n            //     yAxisID: 'y-left',\r\n            //     lineTension: 0.3,\r\n            // },\r\n            {\r\n                label: 'Độ ẩm',\r\n                data: humi,\r\n                borderColor: 'blue',\r\n                backgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n                yAxisID: 'y-left',\r\n                lineTension: 0.3,\r\n            },\r\n            {\r\n                label: 'Ánh sáng',\r\n                data: light,\r\n                borderColor: 'yellow',\r\n                backgroundColor: 'rgba(255, 255, 0, 0.2)',\r\n                yAxisID: 'y-right',\r\n                lineTension: 0.3,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const chartOptions = {\r\n        scales: {\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Hệ thống IoT',\r\n                },\r\n            },\r\n            'y-left': {\r\n                type: 'linear',\r\n                position: 'left',\r\n                min: 0,\r\n                max: 100,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Nhiệt độ và Độ ẩm',\r\n                },\r\n            },\r\n            'y-right': {\r\n                type: 'linear',\r\n                position: 'right',\r\n                min: 0,\r\n                max: 500,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Ánh sáng',\r\n                },\r\n                grid: {\r\n                    drawOnChartArea: false, // Chỉ vẽ lưới cho trục y bên trái\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className=\"border rounded-lg mr-11 ml-[20px]\">\r\n            <Line data={chartData} options={chartOptions} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataChart;","D:\\Bài tập\\IoT\\BTL\\BTL\\client\\src\\components\\Led.js",["86"],[],"import React, { useEffect } from 'react';\r\nimport Fan_off from '../img/fan_off.png';\r\nimport Fan_on from '../img/fan_on.gif';\r\nimport Air_on from '../img/air_on.jpg';\r\nimport Air_off from '../img/air_off.jpg';\r\n\r\nimport io from 'socket.io-client';\r\n\r\nconst Led = ({\r\n    isCheckedLight,\r\n    setIsCheckedLight,\r\n    isCheckedFan,\r\n    setIsCheckedFan,\r\n    isCheckedAirCon,\r\n    setIsCheckedAirCon,\r\n}) => {\r\n    const socket = io('http://localhost:8688'); \r\n\r\n    useEffect(() => {\r\n        // Listen for updates from the server\r\n        socket.on('relay_1', (data_received) => {\r\n            setIsCheckedLight(data_received);\r\n        });\r\n\r\n        socket.on('relay_3', (data_received) => {\r\n            setIsCheckedAirCon(data_received);\r\n        });\r\n\r\n        socket.on('relay_2', (data_received) => {\r\n            setIsCheckedFan(data_received);\r\n            \r\n        });\r\n\r\n        // Clean up the socket listener when the component unmounts\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [socket]);\r\n\r\n    const handleTurnOnLight = () => {\r\n        setIsCheckedLight(true);\r\n        // Thực hiện các thao tác cần thiết khi bật đèn\r\n        socket.emit('control_relay_1', 1);\r\n    };\r\n\r\n    const handleTurnOffLight = () => {\r\n        setIsCheckedLight(false);\r\n        // Thực hiện các thao tác cần thiết khi tắt đèn\r\n        socket.emit('control_relay_1', 0);\r\n    };\r\n\r\n    const handleTurnOnAirCon = () => {\r\n        setIsCheckedAirCon(true);\r\n        // Thực hiện các thao tác cần thiết khi bật điều hòa\r\n        socket.emit('control_relay_3', 1);\r\n    };\r\n\r\n    const handleTurnOffAirCon = () => {\r\n        setIsCheckedAirCon(false);\r\n        // Thực hiện các thao tác cần thiết khi tắt điều hòa\r\n        socket.emit('control_relay_3', 0);\r\n    };\r\n\r\n    const handleTurnOnFan = () => {\r\n        setIsCheckedFan(true);\r\n        // Thực hiện các thao tác cần thiết khi bật quạt\r\n        socket.emit('control_relay_2', 1);\r\n    };\r\n\r\n    const handleTurnOffFan = () => {\r\n        setIsCheckedFan(false);\r\n        // Thực hiện các thao tác cần thiết khi tắt quạt\r\n        socket.emit('control_relay_2', 0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-around\">\r\n            <div className=\"mb-[40px] flex w-[100%] justify-around items-center rounded-xl bg-white bg-clip-border text-gray-700 shadow-md border h-[150px]\">\r\n                {isCheckedLight ? (\r\n                    <img\r\n                        src=\"https://webvn.com/wp-content/uploads/2015/08/pic_bulbon.gif\"\r\n                        className=\"object-contain h-[75px] mr-[-50px]\"\r\n                        alt=\"Light is on\"\r\n                    />\r\n                ) : (\r\n                    <img\r\n                        src=\"https://www.w3schools.com/js/pic_bulboff.gif\"\r\n                        className=\"object-contain h-[75px] mr-[-50px]\"\r\n                        alt=\"Light is off\"\r\n                    />\r\n                )}\r\n                <div className=\"ml-[-50px]\">\r\n                    <div>\r\n                        <button\r\n                            className={`mr-2 mt-[0.3rem] w-[80px] h-[35px] rounded-[0.4375rem] ${\r\n                                isCheckedLight\r\n                                    ? 'bg-primary text-white'\r\n                                    : 'bg-neutral-300 text-black'\r\n                            } focus:outline-none focus:ring-2 focus:ring-primary`}\r\n                            onClick={\r\n                                isCheckedLight\r\n                                    ? handleTurnOffLight\r\n                                    : handleTurnOnLight\r\n                            }\r\n                        >\r\n                            {isCheckedLight ? 'ON' : 'OFF'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mb-[40px] flex w-[100%] justify-around items-center rounded-xl bg-white bg-clip-border text-gray-700 shadow-md border h-[150px]\">\r\n                {isCheckedAirCon ? (\r\n                    <img\r\n                        src={Air_on}\r\n                        className=\"object-contain h-[75px] mr-[-50px]\"\r\n                        alt=\"AirConditioner is on\"\r\n                    />\r\n                ) : (\r\n                    <img\r\n                        src={Air_off}\r\n                        className=\"object-contain h-[75px] mr-[-50px]\"\r\n                        alt = \"AirConditioner is off\"\r\n                    />\r\n                )}\r\n                <div className=\"ml-[-50px]\">\r\n                    <div>\r\n                        <button\r\n                            className={`mr-2 mt-[0.3rem] w-[80px] h-[35px] rounded-[0.4375rem] ${\r\n                                isCheckedAirCon\r\n                                    ? 'bg-primary text-white'\r\n                                    : 'bg-neutral-300 text-black'\r\n                            } focus:outline-none focus:ring-2 focus:ring-primary`}\r\n                            onClick={\r\n                                isCheckedAirCon\r\n                                    ? handleTurnOffAirCon\r\n                                     : handleTurnOnAirCon\r\n                            }\r\n                        >\r\n                            {isCheckedAirCon ? 'ON' : 'OFF'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex w-[100%] justify-around items-center rounded-xl bg-white bg-clip-border text-gray-700 shadow-md border h-[150px]\">\r\n                {isCheckedFan ? (\r\n                    <img\r\n                        src={Fan_on}\r\n                        className=\"object-contain h-[75px] mr-[-50px]\"\r\n                        alt=\"Fan is on\"\r\n                    />\r\n                ) : (\r\n                    <img\r\n                        src={Fan_off}\r\n                        className=\"object-contain h-[75px] mr-[-48px]\"\r\n                        alt=\"Fan is off\"\r\n                    />\r\n                )}\r\n                <div className=\"ml-[-50px]\">\r\n                    <div>\r\n                        <button\r\n                            className={`mr-2 mt-[0.3rem] w-[80px] h-[35px] rounded-[0.4375rem] ${\r\n                                isCheckedFan\r\n                                    ? 'bg-primary text-white'\r\n                                    : 'bg-neutral-300 text-black'\r\n                            } focus:outline-none focus:ring-2 focus:ring-primary`}\r\n                            onClick={\r\n                                isCheckedFan\r\n                                    ? handleTurnOffFan\r\n                                    : handleTurnOnFan\r\n                            }\r\n                        >\r\n                            {isCheckedFan ? 'ON' : 'OFF'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Led;\r\n",{"ruleId":"87","severity":1,"message":"88","line":1,"column":38,"nodeType":"89","messageId":"90","endLine":1,"endColumn":44},{"ruleId":"87","severity":1,"message":"91","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":10},{"ruleId":"87","severity":1,"message":"92","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":17,"column":8,"nodeType":"95","endLine":17,"endColumn":20,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":82,"column":8,"nodeType":"95","endLine":82,"endColumn":21,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":216,"column":41,"nodeType":"101","endLine":220,"endColumn":42},{"ruleId":"99","severity":1,"message":"100","line":233,"column":41,"nodeType":"101","endLine":237,"endColumn":42},{"ruleId":"99","severity":1,"message":"100","line":255,"column":41,"nodeType":"101","endLine":259,"endColumn":42},{"ruleId":"93","severity":1,"message":"102","line":15,"column":8,"nodeType":"95","endLine":15,"endColumn":10,"suggestions":"103"},{"ruleId":"99","severity":1,"message":"100","line":130,"column":41,"nodeType":"101","endLine":134,"endColumn":42},{"ruleId":"99","severity":1,"message":"100","line":150,"column":41,"nodeType":"101","endLine":154,"endColumn":42},{"ruleId":"99","severity":1,"message":"100","line":175,"column":41,"nodeType":"101","endLine":179,"endColumn":42},{"ruleId":"87","severity":1,"message":"104","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":13},{"ruleId":"93","severity":1,"message":"105","line":74,"column":8,"nodeType":"95","endLine":74,"endColumn":10,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":82,"column":17,"nodeType":"101","endLine":85,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":98,"column":17,"nodeType":"101","endLine":101,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":114,"column":17,"nodeType":"101","endLine":114,"endColumn":81},{"ruleId":"87","severity":1,"message":"109","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":13},{"ruleId":"93","severity":1,"message":"110","line":46,"column":8,"nodeType":"95","endLine":46,"endColumn":10,"suggestions":"111"},{"ruleId":"93","severity":1,"message":"112","line":38,"column":8,"nodeType":"95","endLine":38,"endColumn":16,"suggestions":"113"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","'Clock' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDataSensor'. Either include it or remove the dependency array. If 'setDataSensor' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'setCurrentPage'. Either include it or remove the dependency array. If 'setCurrentPage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["115"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setRelay'. Either include it or remove the dependency array. If 'setRelay' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["116"],"'dobui' is defined but never used.","React Hook useEffect has missing dependencies: 'setBgDb', 'setBgHumi', 'setBgLight', 'setBgTemp', 'setDbCard', 'setHumiCard', 'setLightCard', and 'setTempCard'. Either include them or remove the dependency array. If 'setTempCard' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["117"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Chart' is defined but never used.","React Hook useEffect has missing dependencies: 'setDb', 'setHumi', 'setLabel', 'setLight', and 'setTemp'. Either include them or remove the dependency array. If 'setTemp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["118"],"React Hook useEffect has missing dependencies: 'setIsCheckedAirCon', 'setIsCheckedFan', and 'setIsCheckedLight'. Either include them or remove the dependency array. If 'setIsCheckedLight' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["119"],{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [dataSensor, setDataSensor]",{"range":"132","text":"133"},"Update the dependencies array to be: [searchQuery, setCurrentPage]",{"range":"134","text":"135"},"Update the dependencies array to be: [setRelay]",{"range":"136","text":"137"},"Update the dependencies array to be: [setBgDb, setBgHumi, setBgLight, setBgTemp, setDbCard, setHumiCard, setLightCard, setTempCard]",{"range":"138","text":"139"},"Update the dependencies array to be: [setDb, setHumi, setLabel, setLight, setTemp]",{"range":"140","text":"141"},"Update the dependencies array to be: [setIsCheckedAirCon, setIsCheckedFan, setIsCheckedLight, socket]",{"range":"142","text":"143"},[473,485],"[dataSensor, setDataSensor]",[3080,3093],"[searchQuery, setCurrentPage]",[546,548],"[setRelay]",[1982,1984],"[setBgDb, setBgHumi, setBgLight, setBgTemp, setDbCard, setHumiCard, setLightCard, setTempCard]",[1166,1168],"[setDb, setHumi, setLabel, setLight, setTemp]",[1029,1037],"[setIsCheckedAirCon, setIsCheckedFan, setIsCheckedLight, socket]"]