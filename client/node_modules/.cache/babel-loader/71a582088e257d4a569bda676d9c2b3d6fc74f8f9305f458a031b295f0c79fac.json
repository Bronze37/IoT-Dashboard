{"ast":null,"code":"var _jsxFileName = \"D:\\\\B\\xE0i t\\u1EADp\\\\IoT\\\\BTL\\\\BTL\\\\client\\\\src\\\\components\\\\DataChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataChart() {\n  _s();\n  const [temp, setTemp] = useState([28.5, 29.0, 28.8, 29.2]);\n  const [humi, setHumi] = useState([65, 67, 66, 68]);\n  const [light, setLight] = useState([800, 820, 810, 830]);\n  const [label, setLabel] = useState(['12:00', '12:01', '12:02', '12:03']);\n  const maxDataPoints = 10; // Maximum number of data points to display\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentTime = new Date().toLocaleTimeString();\n\n      // Update the data arrays\n      setTemp(prevTemp => {\n        const newTemp = [...prevTemp, Math.random() * 50 + 25]; // Temperature between 25°C and 75°C\n        return newTemp.length > maxDataPoints ? newTemp.slice(1) : newTemp;\n      });\n      setHumi(prevHumi => {\n        const newHumi = [...prevHumi, Math.random() * 40 + 60]; // Humidity between 60% and 100%\n        return newHumi.length > maxDataPoints ? newHumi.slice(1) : newHumi;\n      });\n      setLight(prevLight => {\n        const newLight = [...prevLight, Math.random() * 700 + 300]; // Light between 300 and 1000 lux\n        return newLight.length > maxDataPoints ? newLight.slice(1) : newLight;\n      });\n      setLabel(prevLabel => {\n        const newLabel = [...prevLabel, currentTime];\n        return newLabel.length > maxDataPoints ? newLabel.slice(1) : newLabel;\n      });\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const chartData = {\n    labels: label,\n    datasets: [{\n      label: 'Nhiệt độ',\n      data: temp,\n      borderColor: 'red',\n      backgroundColor: 'rgba(255, 0, 0, 0.2)',\n      yAxisID: 'y1',\n      lineTension: 0.3,\n      pointRadius: 5,\n      pointHoverRadius: 7\n    }, {\n      label: 'Độ ẩm',\n      data: humi,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0, 0, 255, 0.2)',\n      yAxisID: 'y1',\n      lineTension: 0.3,\n      pointRadius: 5,\n      pointHoverRadius: 7\n    }, {\n      label: 'Ánh sáng',\n      data: light,\n      borderColor: 'yellow',\n      backgroundColor: 'rgba(255, 255, 0, 0.2)',\n      yAxisID: 'y2',\n      lineTension: 0.3,\n      pointRadius: 5,\n      pointHoverRadius: 7\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: {\n      duration: 1000,\n      // Duration of animations in milliseconds\n      easing: 'easeInOutQuad' // Easing function to use for animations\n    },\n\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top',\n        labels: {\n          font: {\n            size: 14\n          }\n        }\n      },\n      tooltip: {\n        enabled: true,\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(0,0,0,0.7)',\n        titleFont: {\n          size: 16\n        },\n        bodyFont: {\n          size: 14\n        },\n        footerFont: {\n          size: 12\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Thời gian',\n          font: {\n            size: 16\n          }\n        },\n        ticks: {\n          font: {\n            size: 14\n          }\n        }\n      },\n      y1: {\n        type: 'linear',\n        position: 'left',\n        title: {\n          display: true,\n          text: 'Nhiệt độ và Độ ẩm',\n          font: {\n            size: 16\n          }\n        },\n        ticks: {\n          font: {\n            size: 14\n          }\n        },\n        min: 0,\n        max: 100\n      },\n      y2: {\n        type: 'linear',\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Ánh sáng',\n          font: {\n            size: 16\n          }\n        },\n        ticks: {\n          font: {\n            size: 14\n          }\n        },\n        min: 300,\n        max: 1000,\n        grid: {\n          drawOnChartArea: false // Only show grid lines for the y-axis\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border rounded-lg mr-11 ml-[20px] h-[500px]\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n_s(DataChart, \"HpdLUGCshZxP/BoaSD9k8lYGnXo=\");\n_c = DataChart;\nexport default DataChart;\nvar _c;\n$RefreshReg$(_c, \"DataChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","jsxDEV","_jsxDEV","DataChart","_s","temp","setTemp","humi","setHumi","light","setLight","label","setLabel","maxDataPoints","interval","setInterval","currentTime","Date","toLocaleTimeString","prevTemp","newTemp","Math","random","length","slice","prevHumi","newHumi","prevLight","newLight","prevLabel","newLabel","clearInterval","chartData","labels","datasets","data","borderColor","backgroundColor","yAxisID","lineTension","pointRadius","pointHoverRadius","chartOptions","responsive","maintainAspectRatio","animation","duration","easing","plugins","legend","display","position","font","size","tooltip","enabled","mode","intersect","titleFont","bodyFont","footerFont","scales","x","title","text","ticks","y1","type","min","max","y2","grid","drawOnChartArea","className","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Bài tập/IoT/BTL/BTL/client/src/components/DataChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction DataChart() {\r\n    const [temp, setTemp] = useState([28.5, 29.0, 28.8, 29.2]);\r\n    const [humi, setHumi] = useState([65, 67, 66, 68]);\r\n    const [light, setLight] = useState([800, 820, 810, 830]);\r\n    const [label, setLabel] = useState(['12:00', '12:01', '12:02', '12:03']);\r\n    const maxDataPoints = 10; // Maximum number of data points to display\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentTime = new Date().toLocaleTimeString();\r\n\r\n            // Update the data arrays\r\n            setTemp((prevTemp) => {\r\n                const newTemp = [...prevTemp, Math.random() * 50 + 25]; // Temperature between 25°C and 75°C\r\n                return newTemp.length > maxDataPoints ? newTemp.slice(1) : newTemp;\r\n            });\r\n\r\n            setHumi((prevHumi) => {\r\n                const newHumi = [...prevHumi, Math.random() * 40 + 60]; // Humidity between 60% and 100%\r\n                return newHumi.length > maxDataPoints ? newHumi.slice(1) : newHumi;\r\n            });\r\n\r\n            setLight((prevLight) => {\r\n                const newLight = [...prevLight, Math.random() * 700 + 300]; // Light between 300 and 1000 lux\r\n                return newLight.length > maxDataPoints ? newLight.slice(1) : newLight;\r\n            });\r\n\r\n            setLabel((prevLabel) => {\r\n                const newLabel = [...prevLabel, currentTime];\r\n                return newLabel.length > maxDataPoints ? newLabel.slice(1) : newLabel;\r\n            });\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const chartData = {\r\n        labels: label,\r\n        datasets: [\r\n            {\r\n                label: 'Nhiệt độ',\r\n                data: temp,\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.2)',\r\n                yAxisID: 'y1',\r\n                lineTension: 0.3,\r\n                pointRadius: 5,\r\n                pointHoverRadius: 7,\r\n            },\r\n            {\r\n                label: 'Độ ẩm',\r\n                data: humi,\r\n                borderColor: 'blue',\r\n                backgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n                yAxisID: 'y1',\r\n                lineTension: 0.3,\r\n                pointRadius: 5,\r\n                pointHoverRadius: 7,\r\n            },\r\n            {\r\n                label: 'Ánh sáng',\r\n                data: light,\r\n                borderColor: 'yellow',\r\n                backgroundColor: 'rgba(255, 255, 0, 0.2)',\r\n                yAxisID: 'y2',\r\n                lineTension: 0.3,\r\n                pointRadius: 5,\r\n                pointHoverRadius: 7,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 1000, // Duration of animations in milliseconds\r\n            easing: 'easeInOutQuad', // Easing function to use for animations\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                display: true,\r\n                position: 'top',\r\n                labels: {\r\n                    font: {\r\n                        size: 14,\r\n                    },\r\n                },\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                mode: 'index',\r\n                intersect: false,\r\n                backgroundColor: 'rgba(0,0,0,0.7)',\r\n                titleFont: {\r\n                    size: 16,\r\n                },\r\n                bodyFont: {\r\n                    size: 14,\r\n                },\r\n                footerFont: {\r\n                    size: 12,\r\n                },\r\n            },\r\n        },\r\n        scales: {\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Thời gian',\r\n                    font: {\r\n                        size: 16,\r\n                    },\r\n                },\r\n                ticks: {\r\n                    font: {\r\n                        size: 14,\r\n                    },\r\n                },\r\n            },\r\n            y1: {\r\n                type: 'linear',\r\n                position: 'left',\r\n                title: {\r\n                    display: true,\r\n                    text: 'Nhiệt độ và Độ ẩm',\r\n                    font: {\r\n                        size: 16,\r\n                    },\r\n                },\r\n                ticks: {\r\n                    font: {\r\n                        size: 14,\r\n                    },\r\n                },\r\n                min: 0,\r\n                max: 100,\r\n            },\r\n            y2: {\r\n                type: 'linear',\r\n                position: 'right',\r\n                title: {\r\n                    display: true,\r\n                    text: 'Ánh sáng',\r\n                    font: {\r\n                        size: 16,\r\n                    },\r\n                },\r\n                ticks: {\r\n                    font: {\r\n                        size: 14,\r\n                    },\r\n                },\r\n                min: 300,\r\n                max: 1000,\r\n                grid: {\r\n                    drawOnChartArea: false, // Only show grid lines for the y-axis\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className=\"border rounded-lg mr-11 ml-[20px] h-[500px]\">\r\n            <Line data={chartData} options={chartOptions} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}