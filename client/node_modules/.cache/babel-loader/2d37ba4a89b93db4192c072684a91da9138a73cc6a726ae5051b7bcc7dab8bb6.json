{"ast":null,"code":"var _jsxFileName = \"D:\\\\B\\xE0i t\\u1EADp\\\\IoT\\\\BTL\\\\BTL\\\\client\\\\src\\\\components\\\\DataChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataChart() {\n  _s();\n  // Hardcoded data for temperature, humidity, light, and labels\n  const [temp, setTemp] = useState([28.5, 29.0, 28.8, 29.2]);\n  const [humi, setHumi] = useState([65, 67, 66, 68]);\n  const [light, setLight] = useState([800, 820, 810, 830]);\n  const [label, setLabel] = useState(['12:00', '12:01', '12:02', '12:03']);\n  // const [db, setDb] = useState([10, 12, 11, 13]);\n\n  useEffect(() => {\n    // Example of adding another data point every second\n    const interval = setInterval(() => {\n      const currentTime = new Date().toLocaleTimeString();\n      setLabel(prevLabels => [...prevLabels, currentTime]);\n      setTemp(prevTemp => [...prevTemp, Math.random() * 5 + 25]);\n      setHumi(prevHumi => [...prevHumi, Math.random() * 10 + 60]);\n      setLight(prevLight => [...prevLight, Math.random() * 100 + 700]);\n      // setDb((prevDb) => [...prevDb, Math.random() * 5 + 10]);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const chartData = {\n    labels: label,\n    datasets: [{\n      label: 'Nhiệt độ',\n      data: temp,\n      borderColor: 'red',\n      backgroundColor: 'rgba(255, 0, 0, 0.2)',\n      lineTension: 0.3\n    }, {\n      label: 'Độ ẩm',\n      data: humi,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0, 0, 255, 0.2)',\n      lineTension: 0.3\n    }, {\n      label: 'Ánh sáng',\n      data: light,\n      borderColor: 'yellow',\n      backgroundColor: 'rgba(255, 255, 0, 0.2)',\n      lineTension: 0.3\n    }\n    // {\n    //     label: 'Độ bụi',\n    //     data: db,\n    //     borderColor: 'gray',\n    //     backgroundColor: 'rgba(255, 255, 666, 0.2)',\n    //     lineTension: 0.3,\n    // },\n    ]\n  };\n\n  const chartOptions = {\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: ''\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border rounded-lg mr-11 ml-[20px]\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(DataChart, \"HpdLUGCshZxP/BoaSD9k8lYGnXo=\");\n_c = DataChart;\nexport default DataChart;\nvar _c;\n$RefreshReg$(_c, \"DataChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","jsxDEV","_jsxDEV","DataChart","_s","temp","setTemp","humi","setHumi","light","setLight","label","setLabel","interval","setInterval","currentTime","Date","toLocaleTimeString","prevLabels","prevTemp","Math","random","prevHumi","prevLight","clearInterval","chartData","labels","datasets","data","borderColor","backgroundColor","lineTension","chartOptions","scales","x","title","display","text","className","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Bài tập/IoT/BTL/BTL/client/src/components/DataChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction DataChart() {\r\n    // Hardcoded data for temperature, humidity, light, and labels\r\n    const [temp, setTemp] = useState([28.5, 29.0, 28.8, 29.2]);\r\n    const [humi, setHumi] = useState([65, 67, 66, 68]);\r\n    const [light, setLight] = useState([800, 820, 810, 830]);\r\n    const [label, setLabel] = useState(['12:00', '12:01', '12:02', '12:03']);\r\n    // const [db, setDb] = useState([10, 12, 11, 13]);\r\n\r\n    useEffect(() => {\r\n        // Example of adding another data point every second\r\n        const interval = setInterval(() => {\r\n            const currentTime = new Date().toLocaleTimeString();\r\n            setLabel((prevLabels) => [...prevLabels, currentTime]);\r\n            setTemp((prevTemp) => [...prevTemp, Math.random() * 5 + 25]);\r\n            setHumi((prevHumi) => [...prevHumi, Math.random() * 10 + 60]);\r\n            setLight((prevLight) => [...prevLight, Math.random() * 100 + 700]);\r\n            // setDb((prevDb) => [...prevDb, Math.random() * 5 + 10]);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const chartData = {\r\n        labels: label,\r\n        datasets: [\r\n            {\r\n                label: 'Nhiệt độ',\r\n                data: temp,\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.2)',\r\n                lineTension: 0.3,\r\n            },\r\n            {\r\n                label: 'Độ ẩm',\r\n                data: humi,\r\n                borderColor: 'blue',\r\n                backgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n                lineTension: 0.3,\r\n            },\r\n            {\r\n                label: 'Ánh sáng',\r\n                data: light,\r\n                borderColor: 'yellow',\r\n                backgroundColor: 'rgba(255, 255, 0, 0.2)',\r\n                lineTension: 0.3,\r\n            },\r\n            // {\r\n            //     label: 'Độ bụi',\r\n            //     data: db,\r\n            //     borderColor: 'gray',\r\n            //     backgroundColor: 'rgba(255, 255, 666, 0.2)',\r\n            //     lineTension: 0.3,\r\n            // },\r\n        ],\r\n    };\r\n\r\n    const chartOptions = {\r\n        scales: {\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: '',\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className=\"border rounded-lg mr-11 ml-[20px]\">\r\n            <Line data={chartData} options={chartOptions} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}