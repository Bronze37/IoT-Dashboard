{"ast":null,"code":"var _jsxFileName = \"D:\\\\B\\xE0i t\\u1EADp\\\\IoT\\\\BTL\\\\BTL\\\\client\\\\src\\\\components\\\\DataChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport io from 'socket.io-client';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataChart({\n  temp,\n  setTemp,\n  humi,\n  setHumi,\n  light,\n  setLight,\n  label,\n  setLabel,\n  db,\n  setDb\n}) {\n  _s();\n  useEffect(() => {\n    const socket = io('http://localhost:8688');\n    socket.on('temp', data_received => {\n      const nhietdo = data_received;\n      setTemp(prevTemp => [...prevTemp, nhietdo].slice(-10));\n      const currentTime = new Date().toLocaleTimeString();\n      setLabel(prevLabel => [...prevLabel, currentTime].slice(-10));\n    });\n    socket.on('humi', data_received => {\n      const doam = data_received;\n      setHumi(prevHumi => [...prevHumi, doam].slice(-10));\n    });\n    socket.on('light', data_received => {\n      const anhsang = data_received;\n      setLight(prevLight => [...prevLight, anhsang].slice(-10));\n    });\n\n    // Clean up the socket when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, [setTemp, setHumi, setLight, setLabel]);\n  const chartData = {\n    labels: label,\n    datasets: [{\n      label: 'Nhiệt độ',\n      data: temp,\n      borderColor: 'red',\n      backgroundColor: 'rgba(255, 0, 0, 0.2)',\n      yAxisID: 'y-left',\n      lineTension: 0.3\n    }, {\n      label: 'Độ ẩm',\n      data: humi,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0, 0, 255, 0.2)',\n      yAxisID: 'y-left',\n      lineTension: 0.3\n    }, {\n      label: 'Ánh sáng',\n      data: light,\n      borderColor: 'yellow',\n      backgroundColor: 'rgba(255, 255, 0, 0.2)',\n      yAxisID: 'y-right',\n      lineTension: 0.3\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Hệ thống IoT'\n        },\n        ticks: {\n          maxTicksLimit: 10 // Giới hạn số lượng nhãn hiển thị trên trục x\n        }\n      },\n\n      'y-left': {\n        type: 'linear',\n        position: 'left',\n        min: 0,\n        max: 100,\n        title: {\n          display: true,\n          text: 'Nhiệt độ và Độ ẩm'\n        }\n      },\n      'y-right': {\n        type: 'linear',\n        position: 'right',\n        min: 0,\n        max: 500,\n        title: {\n          display: true,\n          text: 'Ánh sáng'\n        },\n        grid: {\n          drawOnChartArea: false // Chỉ vẽ lưới cho trục y bên trái\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border rounded-lg mr-11 ml-[20px]\",\n    children: [/*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 14\n  }, this);\n}\n_s(DataChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DataChart;\nexport default DataChart;\nvar _c;\n$RefreshReg$(_c, \"DataChart\");","map":{"version":3,"names":["React","useEffect","Line","io","Chart","jsxDEV","_jsxDEV","DataChart","temp","setTemp","humi","setHumi","light","setLight","label","setLabel","db","setDb","_s","socket","on","data_received","nhietdo","prevTemp","slice","currentTime","Date","toLocaleTimeString","prevLabel","doam","prevHumi","anhsang","prevLight","disconnect","chartData","labels","datasets","data","borderColor","backgroundColor","yAxisID","lineTension","chartOptions","scales","x","title","display","text","ticks","maxTicksLimit","type","position","min","max","grid","drawOnChartArea","className","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Bài tập/IoT/BTL/BTL/client/src/components/DataChart.js"],"sourcesContent":["import React, {\r\n    useEffect\r\n} from 'react';\r\nimport {\r\n    Line\r\n} from 'react-chartjs-2';\r\nimport io from 'socket.io-client';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction DataChart({\r\n    temp,\r\n    setTemp,\r\n    humi,\r\n    setHumi,\r\n    light,\r\n    setLight,\r\n    label,\r\n    setLabel,\r\n    db,\r\n    setDb,\r\n}) {\r\n    useEffect(() => {\r\n        const socket = io('http://localhost:8688');\r\n\r\n        socket.on('temp', (data_received) => {\r\n            const nhietdo = data_received;\r\n            setTemp((prevTemp) => [...prevTemp, nhietdo].slice(-10));\r\n\r\n            const currentTime = new Date().toLocaleTimeString();\r\n            setLabel((prevLabel) => [...prevLabel, currentTime].slice(-10));\r\n        });\r\n\r\n        socket.on('humi', (data_received) => {\r\n            const doam = data_received;\r\n            setHumi((prevHumi) => [...prevHumi, doam].slice(-10));\r\n        });\r\n\r\n        socket.on('light', (data_received) => {\r\n            const anhsang = data_received;\r\n            setLight((prevLight) => [...prevLight, anhsang].slice(-10));\r\n        });\r\n\r\n        // Clean up the socket when the component unmounts\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [setTemp, setHumi, setLight, setLabel]);\r\n\r\n    const chartData = {\r\n        labels: label,\r\n        datasets: [{\r\n                label: 'Nhiệt độ',\r\n                data: temp,\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.2)',\r\n                yAxisID: 'y-left',\r\n                lineTension: 0.3,\r\n            },\r\n            {\r\n                label: 'Độ ẩm',\r\n                data: humi,\r\n                borderColor: 'blue',\r\n                backgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n                yAxisID: 'y-left',\r\n                lineTension: 0.3,\r\n            },\r\n            {\r\n                label: 'Ánh sáng',\r\n                data: light,\r\n                borderColor: 'yellow',\r\n                backgroundColor: 'rgba(255, 255, 0, 0.2)',\r\n                yAxisID: 'y-right',\r\n                lineTension: 0.3,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const chartOptions = {\r\n        scales: {\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Hệ thống IoT',\r\n                },\r\n                ticks: {\r\n                    maxTicksLimit: 10, // Giới hạn số lượng nhãn hiển thị trên trục x\r\n                },\r\n            },\r\n            'y-left': {\r\n                type: 'linear',\r\n                position: 'left',\r\n                min: 0,\r\n                max: 100,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Nhiệt độ và Độ ẩm',\r\n                },\r\n            },\r\n            'y-right': {\r\n                type: 'linear',\r\n                position: 'right',\r\n                min: 0,\r\n                max: 500,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Ánh sáng',\r\n                },\r\n                grid: {\r\n                    drawOnChartArea: false, // Chỉ vẽ lưới cho trục y bên trái\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return ( <\r\n        div className = \"border rounded-lg mr-11 ml-[20px]\" >\r\n        <\r\n        Line data = {\r\n            chartData\r\n        }\r\n        options = {\r\n            chartOptions\r\n        }\r\n        /> <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default DataChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}